// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XL.API.Data;

#nullable disable

namespace XL.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230926145729_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XL.API.Data.Models.SheetCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CellId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("SheetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SheetId", "CellId")
                        .IsUnique();

                    b.ToTable("SheetCells");
                });

            modelBuilder.Entity("XL.API.Data.Models.SheetCellReference", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("SheetCellReference");
                });

            modelBuilder.Entity("XL.API.Data.Models.SheetCellReference", b =>
                {
                    b.HasOne("XL.API.Data.Models.SheetCell", "Child")
                        .WithMany("Callers")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XL.API.Data.Models.SheetCell", "Parent")
                        .WithMany("Arguments")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("XL.API.Data.Models.SheetCell", b =>
                {
                    b.Navigation("Arguments");

                    b.Navigation("Callers");
                });
#pragma warning restore 612, 618
        }
    }
}
